//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Linq;
using System.Linq.Expressions;
using VirtualTFS.DAL;

namespace VirtualTFS.DAL.Repositories
{
    /// <summary>
    /// Repository for table aspnet_Membership 
    /// </summary>
    public partial class aspnet_MembershipRepository
    {
        #region auto generate code

        #region variable define

        IUnitOfWork unitOfWork;

        #endregion


        #region Ctor

        // Default contructor that creates an instance of unit of work
        public aspnet_MembershipRepository()
        {
            if (null == unitOfWork)
                unitOfWork = new UnitOfWork();
        }

        // Constructor of an instance of unit of work
        public aspnet_MembershipRepository(IUnitOfWork _unitOfWork)
        {
            unitOfWork = _unitOfWork;
        }

        #endregion


        #region Basic C.R.U.D. operations

        // List of all aspnet_Membership 
        public IList<aspnet_Membership> GetAllaspnet_Membership()
        {
            return unitOfWork.GetAll<aspnet_Membership>();
        }

        // Find all aspnet_Membership 
        public IList<aspnet_Membership> Findaspnet_Membership(Expression<Func<aspnet_Membership, bool>> expression)
        {
            return unitOfWork.Find<aspnet_Membership>(expression).ToList();
        }

        // Get single aspnet_Membership 
        public aspnet_Membership GetSingleaspnet_Membership(Func<aspnet_Membership, bool> expression)
        {
            return unitOfWork.GetSingle<aspnet_Membership>(expression);
        }

        // Add a new aspnet_Membership 
        public aspnet_Membership Addaspnet_Membership(aspnet_Membership _aspnet_Membership)
        {
            unitOfWork.Add<aspnet_Membership>(_aspnet_Membership);
            return _aspnet_Membership;
        }

        // Delete a existed aspnet_Membership 
        public void Deleteaspnet_Membership(aspnet_Membership _aspnet_Membership)
        {
            unitOfWork.Delete<aspnet_Membership>(_aspnet_Membership);
        }

        // Delete batch a existed aspnet_Membership 
        public void DeleteBatchaspnet_Membership(IEnumerable<aspnet_Membership> collection)
        {
        	foreach(var item in collection)
        	{
        		unitOfWork.Delete<aspnet_Membership>(item);
        	}
        }

        // Update a existed aspnet_Membership 
        public aspnet_Membership Updateaspnet_Membership(aspnet_Membership _aspnet_Membership)
        {
            unitOfWork.Update<aspnet_Membership>(_aspnet_Membership);
            return _aspnet_Membership;
        }

        // Refresh an existed aspnet_Membership 
        public aspnet_Membership Refeshaspnet_Membership(aspnet_Membership _aspnet_Membership)
        {
            unitOfWork.Refresh<aspnet_Membership>(_aspnet_Membership);
            return _aspnet_Membership;
        }

        // Refresh Allaspnet_Membership 
        public void RefreshListaspnet_Membership(IEnumerable<aspnet_Membership> list)
        {
            unitOfWork.RefreshList<aspnet_Membership>(list);
        }

        // Commit all changes 
        public void Commit()
        {
            unitOfWork.Commit();
        }

        #endregion


        #endregion


        #region all the custom code


        #endregion

    }
}
