//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using VirtualTFS.DAL;

namespace VirtualTFS.DAL.Models
{
    /// <summary>
    /// Model for table Iteration 
    /// </summary>
    public partial class IterationModel 
    {
        #region Ctor

        // Default contructor
        public IterationModel()
        {
            this.IsNewItem = true;
            this._iteration = new Iteration();
        }

        // Default contructor that set entity to field
        public IterationModel(Iteration iteration)
        {
        	this._iteration = iteration;
            this._id = iteration.Id;
            this._name = iteration.Name;
            this._originalIteration = iteration.DeepClone();
        }

        #endregion


        #region Entity Properties

        
        public event EventHandler PropertyChanged;
        private Iteration _iteration;
        private Iteration _originalIteration;
        
        public Iteration MapIteration()
        {
            this._iteration.Id = this._id;
            this._iteration.Name = this._name;
        	return _iteration;
        }
        
        public void Undo()
        {
            if(this._originalIteration == null) return;
            this._id = this._originalIteration.Id;
            this._name = this._originalIteration.Name;
        	this.Commit();
        }
        
        public void Reload()
        {
        	if(this._originalIteration == null) return;
            this._iteration.Id = this._originalIteration.Id;
            this._iteration.Name = this._originalIteration.Name;
        }
        

        public bool IsNewItem { get; private set; }
        public bool IsDeleted { get; set; }
        public bool IsChecked { get; set; }
        
        private bool _isDirty;
        public bool IsDirty
        {
            get
            {
                return _isDirty;
            }
            private set
            {
                if (_isDirty != value)
                {
                    _isDirty = value;
                    if (PropertyChanged != null)
                        PropertyChanged.Invoke(this, new EventArgs());
                }
            }
        }
        
        public void Commit() {
        	IsNewItem = false;
        	IsDirty = false;
        }

        #endregion


        #region Primitive Properties

        
        private int _id;
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                }
            }
        }
        
        private string _name;
        public string Name
        {
            get { return this._name; }
            set
            {
                if (this._name != value)
                {
                    this.IsDirty = true;
                    this._name = value;
                }
            }
        }

        #endregion


        #region all the custom code


        #endregion
    }
}
